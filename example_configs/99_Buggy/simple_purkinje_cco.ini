# ====================================================================
# Author: Lucas Berg
# Description: This example shows how to build a simple 1D-Purkinje
# simulation using a CCO network.
# ====================================================================
[main]
num_threads=2
dt_pde=0.02
simulation_time=400.0
abort_on_no_activity=false
use_adaptivity=false

[update_monodomain]
main_function=update_monodomain_default

[save_result]
;/////mandatory/////////
print_rate=100
output_dir=./outputs/simple_purkinje_cco
main_function=save_as_vtp_purkinje
save_pvd=true
;//////////////////
file_prefix=V
binary=false
compress=false

[assembly_matrix]
init_function=set_initial_conditions_fvm
sigma_x=0.0000176
sigma_y=0.0001334
sigma_z=0.0000176
library_file=shared_libs/libpurkinje_matrix_assembly.so
main_function=purkinje_fibers_assembly_matrix

[linear_system_solver]
tolerance=1e-16
use_preconditioner=yes
max_iterations=200
library_file=shared_libs/libdefault_linear_system_solver.so
main_function=conjugate_gradient

[alg]
refinement_bound = 0.11
derefinement_bound = 0.10
refine_each = 1
derefine_each = 1

[purkinje]
name=Simple Purkinje
start_discretization=100.0			; Micrometers
Rpmj=1.0e+03
library_file=shared_libs/libdefault_purkinje.so
main_function=initialize_purkinje_with_custom_mesh
;network_file=networks/cco_tree_closest_segment_square.vtk
network_file=networks/cco-networks/cco_tree_Rafael_converted_um.vtk

[ode_solver]
dt=0.02
use_gpu=yes
gpu_id=0
library_file=shared_libs/libfhn_mod.so

# Stimulus Fitz-Hugh Nagumo
<<<<<<< HEAD
[stim_purkinje_his]
=======
[purkinje_stim_his]
>>>>>>> aedb9fab964a0790f2b939b52af16e852aae9d83
start = 0.0
duration = 0.5
current = 1.0
id_limit = 2.0
main_function=stim_if_id_less_than

